#+STARTUP: hidestars
#+TITLE:Hacky Lisp

Common Lisp has a lot of simplicity in it, but there are some parts of
the language that are incredibly complex... Functions that can be used
to hack out a ton of functionality really quickly.

Two examples of this are =format= function and the =loop= macro.

* format
=format= is a function that allows you to output a formatted string
from pretty much anything.

=format= accepts a minimum of 2 arguments, the first being where the
string would be output, passing in =t= will output the string to
standard output and return =nil=, having the second parameter as =nil=
will output the string as the result of the function. Any other values
for the function will output the string to that place as if it were a
stream or a string with a thing called a "fill pointer".

The second parameter is the "control string", which supports eons of
directives to output your textual data in pretty much any way
possible.

#+BEGIN_SRC lisp :export both
  (format nil "|~{~<|~%|~,33:;~2d ~>~}|" (loop for x upto 99 collect x))
#+END_SRC

#+RESULTS:
#+begin_example
| 0  1  2  3  4  5  6  7  8  9 |
|10 11 12 13 14 15 16 17 18 19 |
|20 21 22 23 24 25 26 27 28 29 |
|30 31 32 33 34 35 36 37 38 39 |
|40 41 42 43 44 45 46 47 48 49 |
|50 51 52 53 54 55 56 57 58 59 |
|60 61 62 63 64 65 66 67 68 69 |
|70 71 72 73 74 75 76 77 78 79 |
|80 81 82 83 84 85 86 87 88 89 |
|90 91 92 93 94 95 96 97 98 99 |
#+end_example

